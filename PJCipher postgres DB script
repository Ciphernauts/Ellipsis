/*
==========================================================================================================
		PostGreSQL (pgAdmin4) : Ellipsis Database design 
		Server: PJCipher [The server and the database were created manually using the pgAdmin4 interface]
    Connection: ELLIPSIS/postgres@PJCipher
===========================================================================================================
 1. The Datatypes are closely in match or similar to the Data dictionary
 2. Some of the classes have lil code-block below for the ENUM type, since it isnt a direct option?
 3. Classes are placed in order  
 4. CAPS codeblock was used just to capitalise the names (No LONGER NEEDED )
 5. All subsequent table creation, relationships, and constraints are defined in this script (If not,manually toggled in pgAdmin4).
*/



--DRONE---------------------------------------------------------------------------
CREATE TABLE "Drone"(
"DroneID" VARCHAR(40) PRIMARY KEY,
"MODEL" VARCHAR(40),
"BatteryStatus" VARCHAR(10),
"Location" VARCHAR(50),
"LastMaintainanceD"ate DATE NOT NULL,
"Status" CHAR(10)
);


--SYSTEM ADMINS-------------------------------------------------------------------
CREATE TABLE "SystemAdmin"(
"AdminID" VARCHAR(50) PRIMARY KEY,
"Name" CHAR(40),"ContactInfo" VARCHAR(50),"PermissionLevel" CHAR(80)
);
		--[ENUM SETUP]
		CREATE TYPE "PermissionLevel"_enum AS ENUM ('senior', 'junior', 'standard');
		ALTER TABLE "SystemAdmin"
	 	ALTER COLUMN "PermissionLevel" TYPE permission_level_enum USING "PermissionLevel"::permission_level_enum;


--MAINTAINENCE TASK---------------------------------------------------------------
CREATE TABLE "MaintenanceTask"(
"TaskID" SERIAL PRIMARY KEY,
    "Date" DATE,
    "Description" TEXT,
    "Status" VARCHAR(50),
    "AdminID" VARCHAR REFERENCES SystemAdmin(AdminID),
    "DroneID" VARCHAR REFERENCES "Drone"(DroneID)
);
		--[ENUM SETUP]
		ALTER TABLE "MaintenanceTask"
	    ALTER COLUMN "Status" TYPE status_enum USING "Status"::status_enum;

	
--STATIONARY CAMERA---------------------------------------------------------------
CREATE TABLE "StationaryCamera"(
 "CameraID" VARCHAR(40) PRIMARY KEY,
    "Resolution" VARCHAR(50),
    "Location" VARCHAR(255),
    "Status" VARCHAR(50)
);
	ALTER TABLE "StationaryCamera"
	ALTER COLUMN "CameraID" TYPE VARCHAR(80) USING "CameraID"::VARCHAR;
		
	--[ENUM SETUP]
	CREATE TYPE status_enum AS ENUM ('idle', 'active');
	ALTER TABLE "StationaryCamera"
  ALTER COLUMN "Status" TYPE status_enum USING "Status"::status_enum;

--SESSION-----------------------------------------------------------------------
CREATE TABLE "Session"(
"SessionID" SERIAL PRIMARY KEY,
    "Location" VARCHAR(100),
    "TimeStarted" TIMESTAMP,
    "TimeEnded" TIMESTAMP,
    "CameraID" VARCHAR REFERENCES "StationaryCamera"(CameraID),
    DroneID VARCHAR REFERENCES "Drone"(DroneID),
    "Mode" VARCHAR(50),
    "TotalPeopleDetected" INT,
    "PeopleWithHelmets" INT,
    "PeopleWithSafetyRopes" INT,
    "PeopleWithGloves" INT,
    "PeopleWithVests" INT,
    "PeopleWithSafetyBelts" INT,
    "GoodScaffoldings" INT,
    "BadScaffoldings" INT,
    "ScaffoldingGuardrails" INT,
	"AlertsTriggered" INT
);
	--[ENUM SETUP]
	CREATE TYPE mode_enum AS ENUM ('general', 'entry', 'height', 'workshop');
	ALTER TABLE "Session"
    ALTER COLUMN "Mode" TYPE mode_enum USING "Mode"::mode_enum;
	ALTER TABLE "Session"
  	ADD CONSTRAINT check_mode CHECK ("Mode" IN ('general', 'entry', 'height', 'workshop'));

--AI MODULE----------------------------------------------------------------------
CREATE TABLE "AIModule"(
 "AIModuleID" SERIAL PRIMARY KEY,
    "Type" VARCHAR(100),
    "LastUpdated" TIMESTAMP,
    "Status" VARCHAR(50)
);
ALTER TABLE "AIModule"
ALTER COLUMN "AIModuleID" TYPE VARCHAR(50) USING "AIModuleID"::VARCHAR;
	--[ENUM SETUP]
	CREATE TYPE status_enum AS ENUM ('idle', 'active');
	ALTER TABLE "AIModule"
    ALTER COLUMN "Status" TYPE status_enum USING "Status"::status_enum;

--SUPERVISOR-------------------------------------------------------------------
CREATE TABLE "Supervisor"(
"SupervisorI"D SERIAL PRIMARY KEY,
    "Name" VARCHAR(40),
    "ContactInfo" VARCHAR(100),
    "Role" VARCHAR(50)
);
ALTER TABLE "Supervisor"
ALTER COLUMN "SupervisorID" TYPE VARCHAR(50) USING "SupervisorID"::VARCHAR;


--INCIDENT----------------------------------------------------------------------
CREATE TABLE "Incident"(
"IncidentID" VARCHAR(255) PRIMARY KEY,
    "DateTime" TIMESTAMP,
    "Description" TEXT,
    "Type" VARCHAR(50),
    "SupervisorID" VARCHAR REFERENCES "Supervisor"(SupervisorID),
	 "SessionID" VARCHAR REFERENCES "Session"(SessionID)
);


--SAFETY ALERT-----------------------------------------------------------------
CREATE TABLE "SafetyAlert"(
 "AlertID" VARCHAR PRIMARY KEY,
    "DateTime" TIMESTAMP,
    "Status" VARCHAR(50),
    "IncidentID" VARCHAR REFERENCES "Incident"(IncidentID),
    "SupervisorID" VARCHAR REFERENCES "Supervisor"(SupervisorID)
);
	--[ENUM SETUP]
		CREATE TYPE status1_enum AS ENUM ('Active', 'Acknowledged');
		ALTER TABLE "SafetyAlert"
	    ALTER COLUMN "Status" TYPE status1_enum USING "Status"::status1_enum;


--REPORT-----------------------------------------------------------------------
CREATE TABLE "Report"(
"ReportID" VARCHAR PRIMARY KEY,
    "Date" DATE,
    "GeneratedBy" VARCHAR(255),
    "Summary" TEXT,
    "SessionID" VARCHAR REFERENCES "Session"(SessionID)
);


--PPE COMPLIANCE----------------------------------------------------------------
CREATE TABLE "PPEcompliance"(
 "ComplianceID" VARCHAR PRIMARY KEY,
    "ComplianceType" VARCHAR(255),
    "ComplianceStatus" VARCHAR(50),
    "DateTimeDetected" TIMESTAMP,
    "SupervisorID "VARCHAR REFERENCES "Supervisor"(SupervisorID),
    "IncidentID" VARCHAR REFERENCES "Incident"(IncidentID)
);
