import styles from './AdminDashboard.module.css';
import React, { useEffect, useState } from 'react';
import axios from 'axios';
import { capitalizeFirstLetter } from '../utils/helpers';

export default function AdminDashboard() {
  const [data, setData] = useState({ users: [] });
  const [loading, setLoading] = useState(true); // Add loading state

  const placeholderData = {
    totalUsers: 5,
    totalConstructionSites: 9,
    activeCameras: 3,
    avgIncidentResolutionTime: 2,
    users: [
      {
        id: 1,
        email: 'pejmanjouzi@gmail.com',
        username: 'pejman',
        role: 'admin',
        lastLogin: '2023-10-25T14:30:00Z',
      },
      {
        id: 2,
        email: 'john.doe@gmail.com',
        username: 'john_doe',
        role: 'standard',
        lastLogin: '2023-10-24T09:15:00Z',
      },
    ],
  };

  // Fetch data from the API
  const fetchData = async () => {
    try {
      const response = await axios.get('/api/admin-dashboard'); // Replace with your API endpoint
      if (response.data) {
        setData(response.data); // Set data from the API response
      } else {
        throw new Error('No data returned from API');
      }
    } catch (error) {
      console.error('Error fetching data:', error);
      setData(placeholderData); // Fallback to placeholder data if there's an error
    } finally {
      setLoading(false); // Set loading to false after fetching (success or error)
    }
  };

  // Fetch data when the component mounts
  useEffect(() => {
    fetchData();
  }, []);

  // Loading state
  if (loading) {
    return (
      <div className={styles.adminDashboard}>
        <h1>Admin Dashboard</h1>
        <div className={styles.loading}>
          <p>Loading...</p>
        </div>
      </div>
    );
  }

  return (
    <div className={styles.adminDashboard}>
      <h1>Admin Dashboard</h1>
      <main>
        {/* Info Cards */}
        <div className={styles.row}>
          <div className={`${styles.infoCard} ${'dashboardCard'}`}>
            <div className={styles.icon}>
              <svg
                xmlns='http://www.w3.org/2000/svg'
                width='29'
                height='31'
                viewBox='0 0 29 31'
                fill='none'
              >
                <path
                  d='M22.3333 8C22.3333 12.1421 18.8262 15.5 14.4999 15.5C10.1737 15.5 6.66661 12.1421 6.66661 8C6.66661 3.85786 10.1737 0.5 14.4999 0.5C18.8262 0.5 22.3333 3.85786 22.3333 8Z'
                  fill='var(--light)'
                />
                <path
                  d='M2.75255 21.47C3.79443 18.853 6.43339 17.375 9.25016 17.375H19.7497C22.5665 17.375 25.2055 18.853 26.2473 21.47C27.1279 23.6817 28.0091 26.5574 28.179 29.5004C28.2108 30.0518 27.7606 30.5 27.2083 30.5H1.79161C1.23933 30.5 0.789099 30.0518 0.820926 29.5004C0.990808 26.5574 1.87203 23.6817 2.75255 21.47Z'
                  fill='var(--light)'
                />
              </svg>
            </div>
            <div className={styles.desc}>
              <span className={styles.value}>{data.totalUsers}</span>
              <span className={styles.label}>Total Users</span>
            </div>
          </div>
          <div className={`${styles.infoCard} ${'dashboardCard'}`}>
            <div className={styles.icon}>
              <svg
                xmlns='http://www.w3.org/2000/svg'
                width='37'
                height='26'
                viewBox='0 0 37 26'
                fill='none'
              >
                <path
                  fill-rule='evenodd'
                  clip-rule='evenodd'
                  d='M33.9167 22.4412C33.9167 22.7173 33.6928 22.9412 33.4167 22.9412H26.7083C26.4322 22.9412 26.2083 22.7173 26.2083 22.4412V18.8529C26.2083 18.5768 26.4322 18.3529 26.7083 18.3529H33.4167C33.6928 18.3529 33.9167 18.5768 33.9167 18.8529V22.4412ZM34.4167 15.2941C34.1405 15.2941 33.9167 15.0703 33.9167 14.7941V8.14706C33.9167 7.87092 33.6928 7.64706 33.4167 7.64706H26.7083C26.4322 7.64706 26.2083 7.4232 26.2083 7.14706V0.5C26.2083 0.223857 25.9845 0 25.7083 0H15.4167H12.3333H3.58333C3.30719 0 3.08333 0.223858 3.08333 0.5V7.14706C3.08333 7.4232 2.85948 7.64706 2.58333 7.64706H0.5C0.223857 7.64706 0 7.87092 0 8.14706V17.8529C0 18.1291 0.223858 18.3529 0.5 18.3529H2.58333C2.85948 18.3529 3.08333 18.5768 3.08333 18.8529V25.5C3.08333 25.7761 3.30719 26 3.58333 26H12.3333H15.4167H23.125H26.2083H36.5C36.7761 26 37 25.7761 37 25.5V15.7941C37 15.518 36.7761 15.2941 36.5 15.2941H34.4167ZM30.3333 15.2941C30.6095 15.2941 30.8333 15.0703 30.8333 14.7941V11.2059C30.8333 10.9297 30.6095 10.7059 30.3333 10.7059H26.2083H23.625C23.3489 10.7059 23.125 10.9297 23.125 11.2059V14.7941C23.125 15.0703 23.3489 15.2941 23.625 15.2941H26.2083H30.3333ZM23.125 18.8529C23.125 18.5768 22.9011 18.3529 22.625 18.3529H20.0417H15.9167C15.6405 18.3529 15.4167 18.5768 15.4167 18.8529V22.4412C15.4167 22.7173 15.6405 22.9412 15.9167 22.9412H22.625C22.9011 22.9412 23.125 22.7173 23.125 22.4412V18.8529ZM19.5417 10.7059C19.8178 10.7059 20.0417 10.9297 20.0417 11.2059V14.7941C20.0417 15.0703 19.8178 15.2941 19.5417 15.2941H12.8333C12.5572 15.2941 12.3333 15.0703 12.3333 14.7941V11.2059C12.3333 10.9297 12.5572 10.7059 12.8333 10.7059H15.4167H19.5417ZM11.8333 18.3529C12.1095 18.3529 12.3333 18.5768 12.3333 18.8529V22.4412C12.3333 22.7173 12.1095 22.9412 11.8333 22.9412H6.66667C6.39052 22.9412 6.16667 22.7173 6.16667 22.4412V18.8529C6.16667 18.5768 6.39052 18.3529 6.66667 18.3529H11.8333ZM23.125 3.55882C23.125 3.28268 22.9011 3.05882 22.625 3.05882H15.9167C15.6405 3.05882 15.4167 3.28268 15.4167 3.55882V7.14706C15.4167 7.4232 15.6405 7.64706 15.9167 7.64706H22.625C22.9011 7.64706 23.125 7.4232 23.125 7.14706V3.55882ZM3.58333 10.7059C3.30719 10.7059 3.08333 10.9297 3.08333 11.2059V14.7941C3.08333 15.0703 3.30719 15.2941 3.58333 15.2941H8.75C9.02614 15.2941 9.25 15.0703 9.25 14.7941V11.2059C9.25 10.9297 9.02614 10.7059 8.75 10.7059H3.58333ZM6.16667 7.14706C6.16667 7.4232 6.39052 7.64706 6.66667 7.64706H11.8333C12.1095 7.64706 12.3333 7.4232 12.3333 7.14706V3.55882C12.3333 3.28268 12.1095 3.05882 11.8333 3.05882H6.66667C6.39052 3.05882 6.16667 3.28268 6.16667 3.55882V7.14706Z'
                  fill='var(--light)'
                />
              </svg>
            </div>
            <div className={styles.desc}>
              <span className={styles.value}>
                {data.totalConstructionSites}
              </span>
              <span className={styles.label}>Active Sites</span>
            </div>
          </div>
          <div className={`${styles.infoCard} ${'dashboardCard'}`}>
            <div className={styles.icon}>
              <svg
                xmlns='http://www.w3.org/2000/svg'
                width='38'
                height='29'
                viewBox='0 0 38 29'
                fill='none'
              >
                <path
                  d='M32.8182 6.44444H29.3636V3.22222H32.8182C33.2763 3.22222 33.7156 3.05248 34.0396 2.75034C34.3635 2.4482 34.5455 2.0384 34.5455 1.61111C34.5455 1.18382 34.3635 0.774025 34.0396 0.471883C33.7156 0.169742 33.2763 0 32.8182 0H22.4545C21.9964 0 21.5571 0.169742 21.2332 0.471883C20.9093 0.774025 20.7273 1.18382 20.7273 1.61111C20.7273 2.0384 20.9093 2.4482 21.2332 2.75034C21.5571 3.05248 21.9964 3.22222 22.4545 3.22222H25.9091V6.44444H12.0909V3.22222H15.5455C16.0036 3.22222 16.4429 3.05248 16.7668 2.75034C17.0907 2.4482 17.2727 2.0384 17.2727 1.61111C17.2727 1.18382 17.0907 0.774025 16.7668 0.471883C16.4429 0.169742 16.0036 0 15.5455 0H5.18182C4.72372 0 4.28438 0.169742 3.96045 0.471883C3.63653 0.774025 3.45455 1.18382 3.45455 1.61111C3.45455 2.0384 3.63653 2.4482 3.96045 2.75034C4.28438 3.05248 4.72372 3.22222 5.18182 3.22222H8.63636V6.44444H5.18182C3.80751 6.44444 2.4895 6.95367 1.51772 7.8601C0.54594 8.76652 0 9.9959 0 11.2778C0 12.5597 0.54594 13.789 1.51772 14.6955C2.4895 15.6019 3.80751 16.1111 5.18182 16.1111H8.80909C9.08585 17.3447 9.67184 18.4997 10.5191 19.4816C8.53743 19.8237 6.74643 20.8014 5.45626 22.2455C4.16608 23.6896 3.45797 25.5091 3.45455 27.3889C3.45455 27.8162 3.63653 28.226 3.96045 28.5281C4.28438 28.8303 4.72372 29 5.18182 29C5.63992 29 6.07926 28.8303 6.40318 28.5281C6.72711 28.226 6.90909 27.8162 6.90909 27.3889C6.90909 26.107 7.45503 24.8776 8.42681 23.9712C9.39859 23.0648 10.7166 22.5556 12.0909 22.5556H17.2727V25.7778C17.2727 26.2051 17.4547 26.6149 17.7786 26.917C18.1026 27.2191 18.5419 27.3889 19 27.3889C19.4581 27.3889 19.8974 27.2191 20.2214 26.917C20.5453 26.6149 20.7273 26.2051 20.7273 25.7778V22.5556H25.9091C27.2834 22.5556 28.6014 23.0648 29.5732 23.9712C30.545 24.8776 31.0909 26.107 31.0909 27.3889C31.0909 27.8162 31.2729 28.226 31.5968 28.5281C31.9207 28.8303 32.3601 29 32.8182 29C33.2763 29 33.7156 28.8303 34.0396 28.5281C34.3635 28.226 34.5455 27.8162 34.5455 27.3889C34.542 25.5089 33.8336 23.6892 32.5431 22.2451C31.2526 20.801 29.4612 19.8233 27.4792 19.4816C28.3271 18.4999 28.9136 17.3449 29.1909 16.1111H32.8182C34.1925 16.1111 35.5105 15.6019 36.4823 14.6955C37.4541 13.789 38 12.5597 38 11.2778C38 9.9959 37.4541 8.76652 36.4823 7.8601C35.5105 6.95367 34.1925 6.44444 32.8182 6.44444ZM32.8182 12.8889H27.6364C27.1783 12.8889 26.7389 13.0586 26.415 13.3608C26.0911 13.6629 25.9091 14.0727 25.9091 14.5C25.9091 15.7819 25.3632 17.0113 24.3914 17.9177C23.4196 18.8241 22.1016 19.3333 20.7273 19.3333H17.2727C15.8984 19.3333 14.5804 18.8241 13.6086 17.9177C12.6368 17.0113 12.0909 15.7819 12.0909 14.5C12.0909 14.0727 11.9089 13.6629 11.585 13.3608C11.2611 13.0586 10.8217 12.8889 10.3636 12.8889H5.18182C4.72372 12.8889 4.28438 12.7191 3.96045 12.417C3.63653 12.1149 3.45455 11.7051 3.45455 11.2778C3.45455 10.8505 3.63653 10.4407 3.96045 10.1386C4.28438 9.83641 4.72372 9.66667 5.18182 9.66667H32.8182C33.2763 9.66667 33.7156 9.83641 34.0396 10.1386C34.3635 10.4407 34.5455 10.8505 34.5455 11.2778C34.5455 11.7051 34.3635 12.1149 34.0396 12.417C33.7156 12.7191 33.2763 12.8889 32.8182 12.8889ZM22.4545 14.5C22.4545 15.3546 22.0906 16.1742 21.4427 16.7785C20.7949 17.3827 19.9162 17.7222 19 17.7222C18.0838 17.7222 17.2051 17.3827 16.5573 16.7785C15.9094 16.1742 15.5455 15.3546 15.5455 14.5C15.5513 14.1816 15.6095 13.8659 15.7182 13.5639C15.8315 13.8037 16.0057 14.014 16.2259 14.1768C16.446 14.3395 16.7053 14.4497 16.9814 14.4978C17.2575 14.5459 17.5421 14.5305 17.8103 14.4529C18.0786 14.3753 18.3226 14.2379 18.521 14.0525C18.7195 13.8671 18.8665 13.6393 18.9493 13.389C19.0321 13.1386 19.0481 12.8732 18.9961 12.6158C18.9441 12.3583 18.8256 12.1166 18.6508 11.9115C18.476 11.7064 18.2502 11.5442 17.993 11.4389C18.3181 11.3384 18.6576 11.2841 19 11.2778C19.9162 11.2778 20.7949 11.6173 21.4427 12.2215C22.0906 12.8258 22.4545 13.6454 22.4545 14.5Z'
                  fill='var(--light)'
                />
              </svg>
            </div>
            <div className={styles.desc}>
              <span className={styles.value}>{data.activeCameras}</span>
              <span className={styles.label}>Active Cameras</span>
            </div>
          </div>
          <div className={`${styles.infoCard} ${'dashboardCard'}`}>
            <div className={styles.icon}>
              <svg
                xmlns='http://www.w3.org/2000/svg'
                width='33'
                height='33'
                viewBox='0 0 33 33'
                fill='none'
              >
                <path
                  d='M32.5971 22.447C32.3393 22.1893 31.9896 22.0444 31.625 22.0444C31.2604 22.0444 30.9107 22.1893 30.6529 22.447L22.9158 30.1855L19.2198 26.5377C18.9645 26.276 18.6157 26.1265 18.2502 26.122C17.8847 26.1174 17.5323 26.2583 17.2707 26.5136C17.009 26.7689 16.8595 27.1176 16.855 27.4831C16.8505 27.8487 16.9914 28.201 17.2466 28.4627L21.0196 32.1752C21.2563 32.4303 21.5421 32.6349 21.86 32.7767C22.1778 32.9185 22.521 32.9945 22.869 33.0002H22.9144C23.2555 33.0013 23.5934 32.9346 23.9085 32.8041C24.2236 32.6736 24.5096 32.4818 24.75 32.2398L32.5971 24.3913C32.8549 24.1334 32.9997 23.7838 32.9997 23.4192C32.9997 23.0546 32.8549 22.7049 32.5971 22.447ZM15.2488 30.1938C12.5937 29.9512 10.0664 28.9419 7.97462 27.2888C5.88283 25.6357 4.31675 23.4102 3.46703 20.8831C2.61731 18.356 2.52061 15.6363 3.1887 13.0553C3.8568 10.4742 5.26086 8.14305 7.22997 6.34558C9.19907 4.54812 11.6483 3.3619 14.2794 2.93132C16.9105 2.50075 19.6101 2.8444 22.0494 3.92044C24.4888 4.99648 26.5627 6.75849 28.0187 8.99196C29.4746 11.2254 30.2499 13.834 30.25 16.5002C30.25 16.9223 30.2294 17.3403 30.1936 17.7528C30.1768 17.9331 30.1957 18.1149 30.2494 18.2878C30.303 18.4608 30.3903 18.6214 30.5061 18.7605C30.622 18.8997 30.7642 19.0145 30.9246 19.0986C31.085 19.1826 31.2604 19.2341 31.4407 19.2502C31.621 19.2683 31.803 19.2502 31.9762 19.197C32.1493 19.1439 32.3101 19.0566 32.4491 18.9405C32.588 18.8243 32.7024 18.6815 32.7854 18.5205C32.8685 18.3596 32.9185 18.1836 32.9326 18.003C32.9766 17.5039 33 17.0048 33 16.5002C32.9998 13.3007 32.0695 10.1703 30.3222 7.49004C28.5749 4.80982 26.0861 2.6954 23.1587 1.40423C20.2313 0.113066 16.9917 -0.299159 13.8343 0.217749C10.6768 0.734658 7.73776 2.1584 5.37493 4.31563C3.0121 6.47287 1.32742 9.27053 0.526007 12.368C-0.275408 15.4655 -0.158988 18.7291 0.861093 21.7617C1.88117 24.7942 3.76091 27.4647 6.27144 29.4481C8.78198 31.4315 11.815 32.6422 15.0013 32.9328C15.0439 32.9328 15.0851 32.9328 15.1264 32.9328C15.491 32.949 15.8472 32.8197 16.1166 32.5733C16.3859 32.3269 16.5463 31.9836 16.5626 31.619C16.5788 31.2543 16.4495 30.8981 16.2031 30.6288C15.9567 30.3594 15.6134 30.199 15.2488 30.1828V30.1938ZM15.125 9.62515V15.9309L11.4029 19.653C11.2716 19.7799 11.1668 19.9316 11.0947 20.0993C11.0227 20.2671 10.9847 20.4475 10.9832 20.6301C10.9816 20.8127 11.0164 20.9937 11.0855 21.1627C11.1546 21.3317 11.2567 21.4852 11.3858 21.6143C11.5149 21.7434 11.6685 21.8455 11.8374 21.9147C12.0064 21.9838 12.1875 22.0186 12.3701 22.017C12.5526 22.0154 12.7331 21.9775 12.9008 21.9054C13.0686 21.8334 13.2203 21.7286 13.3471 21.5973L17.4721 17.4723C17.73 17.2145 17.8749 16.8648 17.875 16.5002V9.62515C17.875 9.26048 17.7301 8.91074 17.4723 8.65288C17.2144 8.39502 16.8647 8.25015 16.5 8.25015C16.1353 8.25015 15.7856 8.39502 15.5277 8.65288C15.2699 8.91074 15.125 9.26048 15.125 9.62515Z'
                  fill='var(--light)'
                />
              </svg>
            </div>
            <div className={styles.desc}>
              <span className={styles.value}>
                {data.avgIncidentResolutionTime}
              </span>
              <span className={styles.label}>Avg Incident Resolution Time</span>
            </div>
          </div>
        </div>

        {/* Users Table */}
        <div className={styles.usersContainer}>
          <h2>Users</h2>
          <table className={styles.usersTable}>
            <thead className={styles.tableHeader}>
              <tr className={styles.tableRow}>
                <th>ID</th>
                <th>Username</th>
                <th>Email</th>
                <th>Role</th>
                <th>Last Login</th>
              </tr>
            </thead>
            <tbody className={styles.tableBody}>
              {data.users.map((user) => (
                <tr key={user.id} className={styles.tableRow}>
                  <td>{user.id}</td>
                  <td>{user.username}</td>
                  <td>{user.email}</td>
                  <td>{capitalizeFirstLetter(user.role)}</td>
                  <td>
                    <div className={styles.timeValues}>
                      <span>
                        {new Date(user.lastLogin).toLocaleDateString()}
                      </span>
                      <span>
                        {new Date(user.lastLogin).toLocaleTimeString()}
                      </span>
                    </div>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </main>
    </div>
  );
}
